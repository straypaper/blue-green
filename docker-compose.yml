version: "3.8"

services:
  blue:
    build:
      context: ./blue
      dockerfile: Dockerfile
    labels:
      - traefik.http.routers.blue-router.entrypoints=web
      - traefik.http.routers.blue-router.service=blue-service
      - traefik.http.routers.blue-router.rule=Host(`blue.docker.localhost`)
      - traefik.http.services.blue-service.loadbalancer.server.scheme=http
      - traefik.http.services.blue-service.loadbalancer.server.port=80
  green:
    build:
      context: ./green
      dockerfile: Dockerfile
    labels:
      - traefik.http.routers.green-router.entrypoints=web
      - traefik.http.routers.green-router.service=green-service
      - traefik.http.routers.green-router.rule=Host(`green.docker.localhost`)
      - traefik.http.services.green-service.loadbalancer.server.scheme=http
      - traefik.http.services.green-service.loadbalancer.server.port=80
  mssql:
    cap_add:
      - SYS_PTRACE
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: p@ssw0rd1
      MSSQL_PID: Developer
    volumes:
      - ./mssql/data/:/var/opt/mssql/data/
      - ./mssql/log/:/var/opt/mssql/log/
    labels:
      - traefik.tcp.routers.mssql.service=mssql
      - traefik.tcp.routers.mssql.entrypoints=mssql
      - traefik.tcp.routers.mssql.rule=HostSNI(`*`)
      - traefik.tcp.services.mssql.loadbalancer.server.address=0.0.0.0:1433
  traefik:
    image: traefik:v2.10.1
    ports:
      - 80:80
      - 1433:1433
      - 8080:8080
    labels:
      - traefik.enable=true
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./dynamic:/etc/traefik/dynamic:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
